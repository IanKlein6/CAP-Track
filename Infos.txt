### Django
Start server
    python3 manage.py runserver

### DataBase 
Start SQL 
    brew services start mysql
Stop SQL
    brew services stop mysql
Security Installation
    mysql_secure_installation


Commandline:
Login 
    mysql -u root -p
Stop
    exit; or quit;

Creating a new user
    CREATE USER 'your_mysql_username'@'localhost' IDENTIFIED BY 'your_mysql_password';
    GRANT ALL PRIVILEGES ON your_database_name.* TO 'your_mysql_username'@'localhost';
    FLUSH PRIVILEGES;

Grant Privileges
    GRANT ALL PRIVILEGES ON *.* TO 'old_username'@'localhost' WITH GRANT OPTION;
    then always flush

Change User:
    Password
        ALTER USER 'username'@'localhost' IDENTIFIED BY 'new_password';
        FLUSH PRIVILEGES;
    Username
        Have to create a new user   
        DROP USER 'old_username'@'localhost'; # to remove old user





### Infos to coding the application 

Soft Delete under Models: 
    use x.objects.all() to get all job sites including soft-delete ones
    use x.active_objects.all() to get only those that haven't been soft-delete
    Example: JobSite.objects.all() 

Calendar Week:
    Calculates the calendar week using iso calendar. 
    Query Examples: 
        entries_in_specific_week = WorkEntry.objects.filter(calendar_week=1) 
        entries_on_specific_date = WorkEntry.objects.filter(date='2024-01-02')

Hour Totals:
    Query Examples: 
        totals_per_site = total_hours_per_job_site(2024, 1)
        total_for_week = total_hours_for_week(2024, 1)



User Authentication:
    Model: 
        Excisting: 
            username
            first_name
            last_name
            email
            password
            groups
            user_permissions
            is_staff
            is_active
            is_superuser
            last_login
            date_joined
        New to add if needed:
            profile_picture = models.ImageField(upload_to='profile_pics/', null=True, blank=True)
            birthdate = models.DateField(null=True, blank=True)
            phone_number = models.CharField(validators=[RegexValidator(regex=r'^\+?1?\d{9,15}$')], max_length=17, blank=True)
            website_url = models.URLField(max_length=200, blank=True)
            twitter_handle = models.URLField(max_length=200, blank=True)
            email_notifications = models.BooleanField(default=True)

        Blank True makes the field optional

Production To-Dos:
    Settings.py
        # Allow all origins
        CORS_ALLOW_ALL_ORIGINS = True ### change this for production to restrict to trusted origins